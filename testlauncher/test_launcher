#!/usr/bin/python3

import subprocess
import sys

def quit_or_not():
    if exit_on_first_error == "y" : exit(84) 

def output_printt(text):
    if output_print == "y" : print("output of the test: \n" + text)

def compare_output(text, file):
    to_test = text.split('\n')
    list = open(file, "r").read().split('\n')
    count = 0
    for i in list:
        if (i != to_test[count]):
            print("In the line[%d] error: %s\nthe correct output is %s" % (count + 1, to_test[count], i))
            return -1
        count += 1
    return 1


def launch_test():
    error = 0
    
    #error 01
    res = subprocess.run(["./../107transfer", "-h"], capture_output=True)
    output_printt(res.stdout.decode())
    if (res.stdout.decode() != "USAGE\n    ./107transfer [num den]+\n\nDESCRIPTION\n    num    polynomial numerator defined by its coefficients\n    den    polynomial denominator defined by its coefficients\n"):
        print("to correct: your -help is not correct (error01)")
        error += 1
        quit_or_not()
    
    #error 02
    res = subprocess.run(["./../107transfer", "-h", "1"], capture_output=True)
    output_printt(res.stdout.decode())
    if (res.returncode != 84):
        print("to correct: your -h errorcase is not totally ok (error02)")
        error += 1
        quit_or_not()
    
    #error 03
    res = subprocess.run(["./../107transfer", "0*1*2*3*4", "1"], capture_output=True)
    output_printt(res.stdout.decode())
    if (compare_output(res.stdout.decode(), "output1") == -1):
        error += 1
        print("the result is not ok")
    if (res.returncode != 0):
        print("to correct: your program have to be executed in this case (error03)(output1)")
        error += 1
        quit_or_not()
    
    
    #error 04
    res = subprocess.run(["./../107transfer", "0*0*9", "1*3*5", "2*4*6", "8*8*8"], capture_output=True)
    output_printt(res.stdout.decode())
    if (compare_output(res.stdout.decode(), "output2") == -1): 
        error += 1
        print("the result is not ok")
    if (res.returncode != 0):
        print("to correct: your program have to be executed in this case (error04)(output2)")
        error += 1
        quit_or_not()
    
    #error 05
    res = subprocess.run(["./../107transfer", "0*1*2*3*4", "0*0"], capture_output=True)
    output_printt(res.stdout.decode())
    if (res.returncode != 84):
        print("to correct: your program don't have to be executed in this case (error05)")
        error += 1
        quit_or_not()
    
    #error 06
    res = subprocess.run(["./../107transfer", "1*9"], capture_output=True)
    output_printt(res.stdout.decode())
    if (res.returncode != 84):
        print("to correct: your program don't have to be executed in this case (error06)")
        error += 1
        quit_or_not()
    
    #error 07
    res = subprocess.run(["./../107transfer", "1*2", "a*4"], capture_output=True)
    output_printt(res.stdout.decode())
    if (res.returncode != 84):
        print("to correct: your program don't have to be executed in this case (error07)")
        error += 1
        quit_or_not()
    
    if (error == 0):
        print("all good bro")

if __name__ == "__main__":
    if (len(sys.argv) == 2 and sys.argv[1] == "-h" and len(sys.argv) == 2):
        print("Write this on the console to configure the attributes of the output: ./test_launcher -p.")
        print("By default all the param will be enable.")
        exit(0)
    if (len(sys.argv) == 2 and sys.argv[1] == "-p"):
        exit_on_first_error = input("exit on first error?(y/n)")
        output_print = input("display the output of your program?(y/n)")
    else:
        output_print = "y"
        exit_on_first_error = "y"
    launch_test()
